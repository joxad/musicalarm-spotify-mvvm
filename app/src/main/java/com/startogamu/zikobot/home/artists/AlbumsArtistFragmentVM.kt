package com.startogamu.zikobot.home.artists

import android.databinding.ObservableArrayList
import android.os.Bundle
import com.joxad.androidtemplate.core.log.AppLog
import com.joxad.easydatabinding.fragment.v4.FragmentBaseVM
import com.joxad.zikobot.data.db.AlbumManager
import com.joxad.zikobot.data.db.ArtistManager
import com.startogamu.zikobot.BR
import com.startogamu.zikobot.Constants
import com.startogamu.zikobot.R
import com.startogamu.zikobot.databinding.AlbumsArtistFragmentBinding
import com.startogamu.zikobot.home.albums.AlbumVM
import me.tatarka.bindingcollectionadapter2.ItemBinding

/**
 * Generated by generator-android-template
 */
class AlbumsArtistFragmentVM
/***
 * @param fragment
 * @param binding
 */
(fragment: AlbumsArtistFragment, binding: AlbumsArtistFragmentBinding, savedInstance: Bundle?) : FragmentBaseVM<AlbumsArtistFragment, AlbumsArtistFragmentBinding>(fragment, binding, savedInstance) {
    var itemBinding = ItemBinding.of<AlbumVM>(BR.albumVM, R.layout.album_item)
    lateinit var items: ObservableArrayList<AlbumVM>
    override fun onCreate(savedInstance: Bundle?) {
        items = ObservableArrayList()
        val artistId = fragment.arguments.get(Constants.Extra.ARTIST_ID) as Int
        ArtistManager.findOne(artistId).subscribe({ it ->
            if (!it.spotifyId.isNullOrEmpty())
                loadAlbums(it.spotifyId)
        }, {
            AppLog.INSTANCE.e(TAG, it.localizedMessage)
        })


    }

    fun loadAlbums(artistId: String?) {
        AlbumManager.findAlbumsForArtist(artistId!!).subscribe({
            for (album in it) {
                items.add(AlbumVM(false, fragment.activity, album))
            }
        }, {
            AppLog.INSTANCE.e(TAG, it.localizedMessage)
        })

    }

    companion object {

        private val TAG = AlbumsArtistFragmentVM::class.java.simpleName
    }
}
