package com.startogamu.zikobot.home.sync

import android.databinding.ObservableArrayList
import android.databinding.ObservableBoolean
import android.os.Bundle
import android.view.View
import android.widget.Toast
import com.joxad.androidtemplate.core.log.AppLog
import com.joxad.easydatabinding.bottomsheet.DialogBottomSheetBaseVM
import com.joxad.zikobot.data.AppPrefs
import com.joxad.zikobot.data.db.PlaylistManager
import com.joxad.zikobot.data.db.model.ZikoPlaylist
import com.joxad.zikobot.data.module.accounts.AccountManager
import com.joxad.zikobot.data.module.spotify_api.manager.SpotifyApiManager
import com.startogamu.zikobot.BR
import com.startogamu.zikobot.NavigationManager
import com.startogamu.zikobot.R
import com.startogamu.zikobot.databinding.SpotifySyncPlaylistsFragmentBinding
import com.startogamu.zikobot.home.playlists.PlaylistVM
import me.tatarka.bindingcollectionadapter2.ItemBinding

/**
 * Generated by generator-android-template
 */
class SpotifySyncPlaylistsFragmentVM(fragment: SpotifySyncPlaylistsFragment, binding: SpotifySyncPlaylistsFragmentBinding) : DialogBottomSheetBaseVM<SpotifySyncPlaylistsFragment, SpotifySyncPlaylistsFragmentBinding>(fragment, binding) {


    var itemBinding = ItemBinding.of<PlaylistVM>(BR.playlistVM, R.layout.playlist_item)
    lateinit var items: ObservableArrayList<PlaylistVM>
    lateinit var loading: ObservableBoolean
    lateinit var showConnect: ObservableBoolean
    override fun onCreate() {

        items = ObservableArrayList()
        loading = ObservableBoolean(false)
        if (AppPrefs.getSpotifyAccessToken().isNullOrEmpty()) {
            showConnect = ObservableBoolean(true)

        } else {
            showConnect = ObservableBoolean(false)
            loadData()
        }
        AccountManager.INSTANCE.spotifyUserSubject.subscribe({
            showConnect.set(false)
            loadData()
        })
    }

    private fun loadData() {
        loading.set(true)
        SpotifyApiManager.INSTANCE.userPlaylists.subscribe({
            for (spo in it.items) {
                val zikoP = ZikoPlaylist.fromSpotifyPlaylist(spo)
                val playlistVM = object : PlaylistVM(false, fragment.activity, zikoP) {
                    override fun onClick(v: View) {
                        model.save()
                        PlaylistManager.INSTANCE.syncSpotifyPlaylist(model).subscribe({
                            Toast.makeText(context, "Playlist ${model.name} added", Toast.LENGTH_SHORT).show()
                        }, {
                            Toast.makeText(context, "Error while adding playlist", Toast.LENGTH_SHORT).show()
                        })
                    }
                }
                items.add(playlistVM)
            }
            loading.set(false)
        }, {
            AppLog.INSTANCE.e("Spotify", it.localizedMessage)
            loading.set(false)
        })

    }

    fun showAccount(view: View) {
        NavigationManager.showAccount(fragment.activity)
    }

    override fun onCreate(savedInstance: Bundle?) {

    }

    companion object {

        val TAG = SpotifySyncPlaylistsFragmentVM::class.java.simpleName
    }
}
